{"version":3,"sources":["components/tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","map","tab","Fragment","htmlFor","id","title","type","name","value","checked","onChange","content","App","state","selectedTab","event","target","currentTab","find","setState","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4MAUaA,EAAuB,SAAC,GAAD,IAClCC,EADkC,EAClCA,KACAC,EAFkC,EAElCA,cACAC,EAHkC,EAGlCA,cAHkC,OAKlC,+BACGF,EAAKG,KAAI,SAAAC,GAAG,OACX,eAAC,IAAMC,SAAP,WACE,uBAAOC,QAASF,EAAIG,GAApB,SAAyBH,EAAII,QAC7B,uBACEC,KAAK,QACLC,KAAMN,EAAII,MAEVD,GAAIH,EAAIG,GACRI,MAAOP,EAAIG,GACXK,QAASX,IAAkBG,EAAIG,GAC/BM,SAAUX,GAJLE,EAAIG,MALQH,EAAIG,GAAK,UCb9BP,G,MAAc,CAClB,CAAEO,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,iBAQpCC,E,4MACJC,MAAe,CACbC,YAAajB,EAAK,GAClBC,cAAeD,EAAK,GAAGO,I,EAGzBL,cAAgB,SAACgB,GACf,IAAQX,EAAOW,EAAMC,OAAbZ,GAEFa,EAAapB,EAAKqB,MAAK,SAAAjB,GAAG,OAAIA,EAAIG,KAAOA,MAAO,KAEtD,EAAKe,SAAS,CACZL,YAAaG,EACbnB,cAAeM,K,4CAInB,WACE,MAAuCgB,KAAKP,MAApCC,EAAR,EAAQA,YAAahB,EAArB,EAAqBA,cAErB,OACE,sBAAKuB,UAAU,MAAf,UACE,6BACGP,GAAW,UAAQA,EAAYT,MAApB,kBAGd,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeA,EACfC,cAAeqB,KAAKrB,gBAGtB,4BAAIe,GAAeA,EAAYH,iB,GAhCrBW,IAAMC,WAsCTX,IClDfY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1635755f.chunk.js","sourcesContent":["import React from 'react';\n\ntype HandleSelected = (event: React.ChangeEvent<HTMLInputElement>) => void;\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: HandleSelected;\n};\n\nexport const Tabs:React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => (\n  <form>\n    {tabs.map(tab => (\n      <React.Fragment key={tab.id + 22}>\n        <label htmlFor={tab.id}>{tab.title}</label>\n        <input\n          type=\"radio\"\n          name={tab.title}\n          key={tab.id}\n          id={tab.id}\n          value={tab.id}\n          checked={selectedTabId === tab.id}\n          onChange={onTabSelected}\n        />\n      </React.Fragment>\n    ))}\n  </form>\n);\n","import React from 'react';\nimport { Tabs } from './components/tabs';\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: Tab | null;\n  selectedTabId: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n    selectedTabId: tabs[0].id,\n  };\n\n  onTabSelected = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { id } = event.target;\n\n    const currentTab = tabs.find(tab => tab.id === id) || null;\n\n    this.setState({\n      selectedTab: currentTab,\n      selectedTabId: id,\n    });\n  };\n\n  render() {\n    const { selectedTab, selectedTabId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedTab && (`${selectedTab.title} is selected`)}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={this.onTabSelected}\n        />\n\n        <p>{selectedTab && selectedTab.content}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}