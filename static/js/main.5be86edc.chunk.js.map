{"version":3,"sources":["components/tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","map","tab","htmlFor","id","title","type","name","value","checked","onChange","content","App","state","selectedTab","event","target","currentTab","find","setState","className","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4MAUaA,EAAuB,SAACC,GACnC,IAAQC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAE7B,OACE,+BACGF,EAAKG,KAAI,SAAAC,GAAG,OACX,qCACE,uBAAOC,QAASD,EAAIE,GAApB,SAA2CF,EAAIG,OAAlBH,EAAIE,GAAK,IACtC,uBACEE,KAAK,QACLC,KAAML,EAAIG,MAEVD,GAAIF,EAAIE,GACRI,MAAON,EAAIE,GACXK,QAASV,IAAkBG,EAAIE,GAC/BM,SAAUV,GAJLE,EAAIE,aCjBfN,G,MAAc,CAClB,CAAEM,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,iBAQpCC,E,4MACJC,MAAe,CACbC,YAAahB,EAAK,GAClBC,cAAeD,EAAK,GAAGM,I,EAGzBJ,cAAgB,SAACe,GACf,IAAQX,EAAOW,EAAMC,OAAbZ,GAEFa,EAAanB,EAAKoB,MAAK,SAAAhB,GAAG,OAAIA,EAAIE,KAAOA,MAAO,KAEtD,EAAKe,SAAS,CACZL,YAAaG,EACblB,cAAeK,K,4CAInB,WACE,OACE,sBAAKgB,UAAU,MAAf,UACE,6BACGC,KAAKR,MAAMC,YAAX,UAA6BO,KAAKR,MAAMC,YAAYT,MAApD,gBAA4E,KAG/E,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAesB,KAAKR,MAAMd,cAC1BC,cAAeqB,KAAKrB,uB,GA3BZsB,IAAMC,WAkCTX,IC9CfY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5be86edc.chunk.js","sourcesContent":["import React from 'react';\n\ntype HandleSelected = (event: React.ChangeEvent<HTMLInputElement>) => void;\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: HandleSelected;\n};\n\nexport const Tabs:React.FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n\n  return (\n    <form>\n      {tabs.map(tab => (\n        <>\n          <label htmlFor={tab.id} key={tab.id + 22}>{tab.title}</label>\n          <input\n            type=\"radio\"\n            name={tab.title}\n            key={tab.id}\n            id={tab.id}\n            value={tab.id}\n            checked={selectedTabId === tab.id}\n            onChange={onTabSelected}\n          />\n        </>\n      ))}\n    </form>\n  );\n};\n","import React from 'react';\nimport { Tabs } from './components/tabs';\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: Tab | null;\n  selectedTabId: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n    selectedTabId: tabs[0].id,\n  };\n\n  onTabSelected = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { id } = event.target;\n\n    const currentTab = tabs.find(tab => tab.id === id) || null;\n\n    this.setState({\n      selectedTab: currentTab,\n      selectedTabId: id,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.state.selectedTab ? (`${this.state.selectedTab.title} is selected`) : ('')}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={this.state.selectedTabId}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}